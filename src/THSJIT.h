#pragma once

#include "torch/script.h"

#include "Utils.h"

// Copied from libtorch to share the type as an int8_t.
enum TypeKind : int8_t {
#define DEFINE_TYPE(T) T,
    C10_FORALL_TYPES(DEFINE_TYPE)
#undef DEFINE_TYPE
};

// API.

// Loads a TorchScript module from a file.
THS_API JITModule THSJIT_loadModule(const char* filename);

// Gets the number of submodules contained into the source module.
THS_API long THSJIT_getNumModules(const JITModule module);

// Gets the name of the module contained into the input wrapper at the given index.
THS_API const char* THSJIT_getModuleName(const JITModule module, const int index);

// Gets the sub-module contained into the input wrapper at the given index.
THS_API JITModule THSJIT_getModuleFromIndex(const JITModule module, const int index);

// Gets the sub-module contained into the input wrapper with the given name.
THS_API JITModule THSJIT_getModuleFromName(const JITModule module, const char* name);

// Returns the number of inputs expected by the input module.
THS_API int THSJIT_getNumberOfInputs(const JITModule module);

// Returns the number of outputs generated by the input module.
THS_API int THSJIT_getNumberOfOutputs(const JITModule module);

// Returns the type of the nth-input.
THS_API JITType THSJIT_getInputType(const JITModule module, const int n);

// Returns the type of the nth-output.
THS_API JITType THSJIT_getOutputType(const JITModule module, const int n);

// Cast the input type to the proper type.
THS_API void * THSJIT_typeCast(const JITType type);

// Returns the int8_t code for the input type.
THS_API int8_t THSJIT_typeKind(const JITType ttype);

// Returns the int8_t code for the raw type of the tensor.
THS_API int8_t THSJIT_getScalarFromTensorType(const JITTensorType type);

// Gets the number of dimensions of the input tensor type.
THS_API int THSJIT_getTensorTypeDimensions(const JITTensorType type);

// Gets the number of device of the input tensor type.
THS_API const char * THSJIT_getTensorDevice(const JITTensorType type);

// Forward pass over the input module using the input tensor.
THS_API Tensor THSJIT_forward(const JITModule module, const Tensor * tensorPtrs, const int length);

// Disposes the module.
THS_API void THSJIT_moduleDispose(const JITModule module);

// Disposes the type.
THS_API void THSJIT_typeDispose(const JITType type);
